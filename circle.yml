machine:
  node:
    version: 6.2.0
  # Set the timezeone - any value from /usr/share/zoneinfo/ is valid here
  timezone:
    Europe/London
  pre:
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0

  services:
    - docker
  post:
    - docker login -e ${DOCKER_EMAIL} -u ${DOCKER_USER} -p ${DOCKER_PASS}

dependencies:
  pre:
    - docker --version
    # - sudo pip install -U docker-compose==1.4.2
    # - docker-compose --version
  override:
    - npm install
  #       pwd: node
  # post:
  #   - npm run bower_install:
  #       pwd: node
  #   - npm run grunt_build:
  #       pwd: node

test:
  override:
    - NODE_ENV=test DB_HOST=http://127.0.0.1 npm run test
    # - docker-compose -f docker-compose.production.yml
    # - docker-compose -f docker-compose.test.yml up -d
    # - docker-compose -f docker-compose.test.yml run npm run test

deployment:
#   staging:
#     branch: staging
#     commands:
#       - docker-compose -f docker-compose.production.yml build node
#       - docker tag dh_node:latest tutum.co/${DOCKER_USER}/dh_node:staging
#       - docker push tutum.co/${DOCKER_USER}/dh_node:staging
#
  master:
      branch: master
      commands:
        - docker build -t ${DOCKER_USER}/dh-api:latest -t ${DOCKER_USER}/dh-api:${CIRCLE_BUILD_NUM} .
        # - docker-compose -f docker-compose.production.yml build node
        # - docker tag dh-api:latest ${DOCKER_USER}/dh-api:latest
        # - docker tag dh-api:${CIRCLE_BUILD_NUM} ${DOCKER_USER}/dh-api:${CIRCLE_BUILD_NUM}
        - docker push ${DOCKER_USER}/dh-api
        # - docker push ${DOCKER_USER}/dh-api:${CIRCLE_BUILD_NUM}
